
name: Build whl for Jetson (aarch64)

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-22.04-arm

    env:
      CUDA_VERSION: "10.2"
      CUDNN_VERSION: "8"
      V: 1
      VERBOSE: 1

    steps:
      - name: Install dependencies for .deb packages
        run: |
          sudo apt update
          sudo apt install -y wget curl unzip build-essential gnupg software-properties-common cmake ninja-build \
              libopenblas-dev libprotobuf-dev protobuf-compiler libssl-dev libpython3.10-dev ccache \
              python3-pip python3-dev python3-setuptools python3-wheel

      - name: Download GCC-8 and related .deb packages
        run: |
          mkdir gcc8-debs && cd gcc8-debs

          wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/g/gcc-8/gcc-8-base_8.4.0-3ubuntu2_arm64.deb
          wget http://ports.ubuntu.com/ubuntu-ports/pool/main/i/isl/libisl22_0.22.1-1_arm64.deb
          wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/g/gcc-8/libgcc-8-dev_8.4.0-3ubuntu2_arm64.deb
          wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/g/gcc-8/cpp-8_8.4.0-3ubuntu2_arm64.deb
          wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/g/gcc-8/gcc-8_8.4.0-3ubuntu2_arm64.deb
          wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/g/gcc-8/libstdc++-8-dev_8.4.0-3ubuntu2_arm64.deb
          wget http://ports.ubuntu.com/ubuntu-ports/pool/universe/g/gcc-8/g++-8_8.4.0-3ubuntu2_arm64.deb

      - name: Install GCC-8 from .deb packages
        run: |
          cd gcc8-debs
          sudo dpkg -i *.deb || sudo apt -f install -y

      - name: Set GCC-8 and G++-8 as default
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 80

      - name: Show compiler versions
        run: |
          echo "GCC version:"
          gcc --version
          echo "G++ version:"
          g++ --version

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Add Jetson apt repos and keys
        run: |
          wget -qO - https://repo.download.nvidia.com/jetson/jetson-ota-public.asc | sudo tee /etc/apt/trusted.gpg.d/jetson.asc
          echo "deb https://repo.download.nvidia.com/jetson/common r32.7 main" | sudo tee /etc/apt/sources.list.d/jetson-common.list
          echo "deb https://repo.download.nvidia.com/jetson/t210 r32.7 main" | sudo tee /etc/apt/sources.list.d/jetson-t210.list
          sudo apt-get update

      - name: Install system dependencies
        run: |
          sudo apt-get install -y cuda-toolkit-10-2 libcublas10 libcublas-dev libcudnn8 libcudnn8-dev libnvinfer8 libnvinfer-dev

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Build
        run: |
          ./build.sh --config Release --skip_tests --skip_onnx_tests --use_cuda --cuda_home=/usr/local/cuda-10.2/ \
              --cudnn_home=/usr/lib/aarch64-linux-gnu --tensorrt_home /usr/lib/aarch64-linux-gnu --parallel --update --build --build_wheel \
              --cmake_extra_defines 'CMAKE_CUDA_ARCHITECTURES=53' 'onnxruntime_BUILD_UNIT_TESTS=OFF' 'onnxruntime_USE_FLASH_ATTENTION=OFF' 'onnxruntime_USE_MEMORY_EFFICIENT_ATTENTION=OFF'

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/Linux/Release/dist/*.whl
